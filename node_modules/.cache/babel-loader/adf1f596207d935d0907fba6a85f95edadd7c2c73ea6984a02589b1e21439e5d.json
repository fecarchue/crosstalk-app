{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hshjd\\\\Desktop\\\\crosstalk-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WelcomePage from './components/WelcomePage';\nimport MainPage from './components/MainPage';\nimport LoadingPage from './components/LoadingPage';\nimport ChatPage from './components/ChatPage';\nimport MobileChatPage from './components/MobileChatPage';\nimport ScenarioPage from './components/ScenarioPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // page: 'welcome', 'main', 'loading', 'chat', 'mobilechat', 'scenario'\n  const [page, setPage] = useState('welcome');\n\n  // 7개의 시나리오 저장 공간\n  const [scenarios, setScenarios] = useState(Array(7).fill({\n    responses: []\n  }));\n\n  // 현재 활성화된 시나리오 인덱스 (0-6, null은 비활성)\n  const [activeScenarioIndex, setActiveScenarioIndex] = useState(null);\n\n  // 현재 수정 중인 시나리오 인덱스\n  const [editingScenarioIndex, setEditingScenarioIndex] = useState(null);\n\n  // 채팅 메시지 목록\n  const [messages, setMessages] = useState([]);\n\n  // 알림 메시지\n  const [notification, setNotification] = useState(null);\n\n  // 알림 자동 숨김\n  useEffect(() => {\n    if (notification) {\n      const timer = setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [notification]);\n\n  // 페이지 전환 로직\n  const renderPage = () => {\n    var _scenarios$editingSce;\n    switch (page) {\n      case 'welcome':\n        return /*#__PURE__*/_jsxDEV(WelcomePage, {\n          onScrollToMain: () => setPage('main'),\n          onDevButtonClick: index => {\n            setEditingScenarioIndex(index);\n            setPage('scenario');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this);\n      case 'main':\n        return /*#__PURE__*/_jsxDEV(MainPage, {\n          onStartChat: () => setPage('loading'),\n          notification: notification,\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this);\n      case 'loading':\n        return /*#__PURE__*/_jsxDEV(LoadingPage, {\n          onLoadingComplete: () => setPage('chat')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this);\n      case 'chat':\n        return /*#__PURE__*/_jsxDEV(ChatPage, {\n          messages: messages,\n          setMessages: setMessages,\n          activeScenarioIndex: activeScenarioIndex,\n          scenarios: scenarios,\n          onExit: () => {\n            setMessages([]); // 채팅방 나갈 때 메시지 초기화\n            setPage('main');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this);\n      case 'mobilechat':\n        return /*#__PURE__*/_jsxDEV(MobileChatPage, {\n          messages: messages,\n          setMessages: setMessages,\n          activeScenarioIndex: activeScenarioIndex,\n          scenarios: scenarios,\n          onExit: () => {\n            setMessages([]); // 채팅방 나갈 때 메시지 초기화\n            setPage('main');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this);\n      case 'scenario':\n        return /*#__PURE__*/_jsxDEV(ScenarioPage, {\n          scenarioIndex: editingScenarioIndex,\n          initialResponses: ((_scenarios$editingSce = scenarios[editingScenarioIndex]) === null || _scenarios$editingSce === void 0 ? void 0 : _scenarios$editingSce.responses) || [],\n          onBack: () => setPage('main'),\n          onSave: (index, responses) => {\n            const newScenarios = [...scenarios];\n            newScenarios[index] = {\n              responses\n            };\n            setScenarios(newScenarios);\n            setActiveScenarioIndex(index);\n\n            // 7번째 시나리오(index 6)는 로딩 후 모바일 채팅으로\n            if (index === 6) {\n              setPage('loading');\n              setTimeout(() => {\n                setPage('mobilechat');\n              }, 5000); // 로딩 페이지 5초 후 모바일 채팅\n            } else {\n              setPage('main');\n            }\n            setNotification(`시나리오 ${index + 1}이(가) 저장 및 활성화되었습니다.`);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(WelcomePage, {\n          onScrollToMain: () => setPage('main')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-light text-gray-800\",\n    children: renderPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"qABHHW588jf4SgRaJZk6AiFB71w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WelcomePage","MainPage","LoadingPage","ChatPage","MobileChatPage","ScenarioPage","jsxDEV","_jsxDEV","App","_s","page","setPage","scenarios","setScenarios","Array","fill","responses","activeScenarioIndex","setActiveScenarioIndex","editingScenarioIndex","setEditingScenarioIndex","messages","setMessages","notification","setNotification","timer","setTimeout","clearTimeout","renderPage","_scenarios$editingSce","onScrollToMain","onDevButtonClick","index","fileName","_jsxFileName","lineNumber","columnNumber","onStartChat","onLoadingComplete","onExit","scenarioIndex","initialResponses","onBack","onSave","newScenarios","className","children","_c","$RefreshReg$"],"sources":["C:/Users/hshjd/Desktop/crosstalk-app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WelcomePage from './components/WelcomePage';\nimport MainPage from './components/MainPage';\nimport LoadingPage from './components/LoadingPage';\nimport ChatPage from './components/ChatPage';\nimport MobileChatPage from './components/MobileChatPage';\nimport ScenarioPage from './components/ScenarioPage';\nimport './App.css';\n\nfunction App() {\n    // page: 'welcome', 'main', 'loading', 'chat', 'mobilechat', 'scenario'\n    const [page, setPage] = useState('welcome');\n    \n    // 7개의 시나리오 저장 공간\n    const [scenarios, setScenarios] = useState(\n        Array(7).fill({ responses: [] })\n    );\n    \n    // 현재 활성화된 시나리오 인덱스 (0-6, null은 비활성)\n    const [activeScenarioIndex, setActiveScenarioIndex] = useState(null);\n    \n    // 현재 수정 중인 시나리오 인덱스\n    const [editingScenarioIndex, setEditingScenarioIndex] = useState(null);\n    \n    // 채팅 메시지 목록\n    const [messages, setMessages] = useState([]);\n    \n    // 알림 메시지\n    const [notification, setNotification] = useState(null);\n\n    // 알림 자동 숨김\n    useEffect(() => {\n        if (notification) {\n            const timer = setTimeout(() => {\n                setNotification(null);\n            }, 3000);\n            return () => clearTimeout(timer);\n        }\n    }, [notification]);\n\n    // 페이지 전환 로직\n    const renderPage = () => {\n        switch (page) {\n            case 'welcome':\n                return (\n                    <WelcomePage \n                        onScrollToMain={() => setPage('main')} \n                        onDevButtonClick={(index) => {\n                            setEditingScenarioIndex(index);\n                            setPage('scenario');\n                        }}\n                    />\n                );\n            case 'main':\n                return (\n                    <MainPage\n                        onStartChat={() => setPage('loading')}\n                        notification={notification}\n                        setPage={setPage}\n                    />\n                );\n            case 'loading':\n                return <LoadingPage onLoadingComplete={() => setPage('chat')} />;\n            case 'chat':\n                return (\n                    <ChatPage\n                        messages={messages}\n                        setMessages={setMessages}\n                        activeScenarioIndex={activeScenarioIndex}\n                        scenarios={scenarios}\n                        onExit={() => {\n                            setMessages([]); // 채팅방 나갈 때 메시지 초기화\n                            setPage('main');\n                        }}\n                    />\n                );\n            case 'mobilechat':\n                return (\n                    <MobileChatPage\n                        messages={messages}\n                        setMessages={setMessages}\n                        activeScenarioIndex={activeScenarioIndex}\n                        scenarios={scenarios}\n                        onExit={() => {\n                            setMessages([]); // 채팅방 나갈 때 메시지 초기화\n                            setPage('main');\n                        }}\n                    />\n                );\n            case 'scenario':\n                return (\n                    <ScenarioPage\n                        scenarioIndex={editingScenarioIndex}\n                        initialResponses={scenarios[editingScenarioIndex]?.responses || []}\n                        onBack={() => setPage('main')}\n                        onSave={(index, responses) => {\n                            const newScenarios = [...scenarios];\n                            newScenarios[index] = { responses };\n                            setScenarios(newScenarios);\n                            setActiveScenarioIndex(index);\n                            \n                            // 7번째 시나리오(index 6)는 로딩 후 모바일 채팅으로\n                            if (index === 6) {\n                                setPage('loading');\n                                setTimeout(() => {\n                                    setPage('mobilechat');\n                                }, 5000); // 로딩 페이지 5초 후 모바일 채팅\n                            } else {\n                                setPage('main');\n                            }\n                            \n                            setNotification(`시나리오 ${index + 1}이(가) 저장 및 활성화되었습니다.`);\n                        }}\n                    />\n                );\n            default:\n                return <WelcomePage onScrollToMain={() => setPage('main')} />;\n        }\n    };\n\n    return (\n        <div className=\"font-light text-gray-800\">\n            {renderPage()}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}